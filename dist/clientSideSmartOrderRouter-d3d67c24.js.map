{"version":3,"file":"clientSideSmartOrderRouter-d3d67c24.js","sources":["../src/hooks/routing/transformSwapRouteToGetQuoteResult.ts","../src/hooks/routing/clientSideSmartOrderRouter.ts"],"sourcesContent":["import { Protocol } from '@uniswap/router-sdk'\nimport type { SwapRoute } from '@uniswap/smart-order-router'\nimport { QuoteResult, QuoteState, V2PoolInRoute, V3PoolInRoute } from 'state/routing/types'\nimport { isExactInput } from 'utils/tradeType'\n\n// from routing-api (https://github.com/Uniswap/routing-api/blob/main/lib/handlers/quote/quote.ts#L243-L311)\nexport function transformSwapRouteToGetQuoteResult({\n  quote,\n  quoteGasAdjusted,\n  route,\n  routeString,\n  estimatedGasUsed,\n  estimatedGasUsedQuoteToken,\n  estimatedGasUsedUSD,\n  gasPriceWei,\n  methodParameters,\n  blockNumber,\n  trade: { tradeType, inputAmount, outputAmount },\n}: SwapRoute & { routeString: string }): QuoteResult {\n  const routeResponse: Array<V3PoolInRoute[] | V2PoolInRoute[]> = []\n\n  for (const subRoute of route) {\n    const { amount, quote, tokenPath } = subRoute\n\n    if (subRoute.protocol === Protocol.V3) {\n      const pools = subRoute.route.pools\n      const curRoute: V3PoolInRoute[] = []\n      for (let i = 0; i < pools.length; i++) {\n        const nextPool = pools[i]\n        const tokenIn = tokenPath[i]\n        const tokenOut = tokenPath[i + 1]\n\n        let edgeAmountIn = undefined\n        if (i === 0) {\n          edgeAmountIn = isExactInput(tradeType) ? amount.quotient.toString() : quote.quotient.toString()\n        }\n\n        let edgeAmountOut = undefined\n        if (i === pools.length - 1) {\n          edgeAmountOut = isExactInput(tradeType) ? quote.quotient.toString() : amount.quotient.toString()\n        }\n\n        curRoute.push({\n          type: 'v3-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol,\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol,\n          },\n          fee: nextPool.fee.toString(),\n          liquidity: nextPool.liquidity.toString(),\n          sqrtRatioX96: nextPool.sqrtRatioX96.toString(),\n          tickCurrent: nextPool.tickCurrent.toString(),\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut,\n        })\n      }\n\n      routeResponse.push(curRoute)\n    } else if (subRoute.protocol === Protocol.V2) {\n      const pools = subRoute.route.pairs\n      const curRoute: V2PoolInRoute[] = []\n      for (let i = 0; i < pools.length; i++) {\n        const nextPool = pools[i]\n        const tokenIn = tokenPath[i]\n        const tokenOut = tokenPath[i + 1]\n\n        let edgeAmountIn = undefined\n        if (i === 0) {\n          edgeAmountIn = isExactInput(tradeType) ? amount.quotient.toString() : quote.quotient.toString()\n        }\n\n        let edgeAmountOut = undefined\n        if (i === pools.length - 1) {\n          edgeAmountOut = isExactInput(tradeType) ? quote.quotient.toString() : amount.quotient.toString()\n        }\n\n        const reserve0 = nextPool.reserve0\n        const reserve1 = nextPool.reserve1\n\n        curRoute.push({\n          type: 'v2-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol,\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol,\n          },\n          reserve0: {\n            token: {\n              chainId: reserve0.currency.wrapped.chainId,\n              decimals: reserve0.currency.wrapped.decimals,\n              address: reserve0.currency.wrapped.address,\n              symbol: reserve0.currency.wrapped.symbol,\n            },\n            quotient: reserve0.quotient.toString(),\n          },\n          reserve1: {\n            token: {\n              chainId: reserve1.currency.wrapped.chainId,\n              decimals: reserve1.currency.wrapped.decimals,\n              address: reserve1.currency.wrapped.address,\n              symbol: reserve1.currency.wrapped.symbol,\n            },\n            quotient: reserve1.quotient.toString(),\n          },\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut,\n        })\n      }\n\n      routeResponse.push(curRoute)\n    }\n  }\n\n  const amount = isExactInput(tradeType) ? inputAmount : outputAmount\n  return {\n    state: QuoteState.SUCCESS,\n    data: {\n      methodParameters,\n      blockNumber: blockNumber.toString(),\n      amount: amount.quotient.toString(),\n      amountDecimals: amount.toExact(),\n      quote: quote.quotient.toString(),\n      quoteDecimals: quote.toExact(),\n      quoteGasAdjusted: quoteGasAdjusted.quotient.toString(),\n      quoteGasAdjustedDecimals: quoteGasAdjusted.toExact(),\n      gasUseEstimateQuote: estimatedGasUsedQuoteToken.quotient.toString(),\n      gasUseEstimateQuoteDecimals: estimatedGasUsedQuoteToken.toExact(),\n      gasUseEstimate: estimatedGasUsed.toString(),\n      gasUseEstimateUSD: estimatedGasUsedUSD.toExact(),\n      gasPriceWei: gasPriceWei.toString(),\n      route: routeResponse,\n      routeString,\n    },\n  }\n}\n","import { BaseProvider } from '@ethersproject/providers'\nimport { BigintIsh, ChainId, CurrencyAmount, Token, TradeType } from '@uniswap/sdk-core'\nimport type { AlphaRouterConfig } from '@uniswap/smart-order-router'\n// This file is lazy-loaded, so the import of smart-order-router is intentional.\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport {\n  AlphaRouter,\n  OnChainQuoteProvider,\n  routeAmountsToString,\n  StaticV2SubgraphProvider,\n  UniswapMulticallProvider,\n} from '@uniswap/smart-order-router'\nimport { nativeOnChain } from 'constants/tokens'\nimport JSBI from 'jsbi'\nimport { GetQuoteArgs, QuoteResult, QuoteState } from 'state/routing/types'\nimport { isExactInput } from 'utils/tradeType'\n\nimport { transformSwapRouteToGetQuoteResult } from './transformSwapRouteToGetQuoteResult'\nimport { SwapRouterNativeAssets } from './types'\n\nconst AUTO_ROUTER_SUPPORTED_CHAINS: ChainId[] = Object.values(ChainId).filter((chainId): chainId is ChainId =>\n  Number.isInteger(chainId)\n)\n\nfunction isAutoRouterSupportedChain(chainId: ChainId | undefined): boolean {\n  return Boolean(chainId && AUTO_ROUTER_SUPPORTED_CHAINS.includes(chainId))\n}\n\n/** A cache of AlphaRouters, which must be initialized to a specific chain/provider. */\nconst routersCache = new WeakMap<BaseProvider, { [chainId: number]: AlphaRouter }>()\n\nfunction getRouter(chainId: ChainId, provider: BaseProvider): AlphaRouter {\n  const routers = routersCache.get(provider) || {}\n  const cached = routers[chainId]\n  if (cached) return cached\n\n  // V2 is unsupported for chains other than mainnet.\n  // TODO(zzmp): Upstream to @uniswap/smart-order-router, exporting an enum of supported v2 chains for clarity.\n  let v2SubgraphProvider\n  if (chainId !== ChainId.MAINNET) {\n    v2SubgraphProvider = new StaticV2SubgraphProvider(chainId)\n  }\n\n  // V3 computes on-chain, so the quoter must have gas limits appropriate to the provider.\n  // Most defaults are fine, but polygon needs a lower gas limit.\n  // TODO(zzmp): Upstream to @uniswap/smart-order-router, possibly making this easier to modify\n  // (eg allowing configuration without an instance to avoid duplicating multicall2Provider).\n  let onChainQuoteProvider\n  let multicall2Provider\n  if ([ChainId.POLYGON, ChainId.POLYGON_MUMBAI].includes(chainId)) {\n    multicall2Provider = new UniswapMulticallProvider(chainId, provider, 375_000)\n    // See https://github.com/Uniswap/smart-order-router/blob/98c58bdee9981fd9ffac9e7d7a97b18302d5f77a/src/routers/alpha-router/alpha-router.ts#L464-L487\n    onChainQuoteProvider = new OnChainQuoteProvider(\n      chainId,\n      provider,\n      multicall2Provider,\n      {\n        retries: 2,\n        minTimeout: 100,\n        maxTimeout: 1000,\n      },\n      {\n        multicallChunk: 10,\n        gasLimitPerCall: 5_000_000,\n        quoteMinSuccessRate: 0.1,\n      },\n      {\n        gasLimitOverride: 5_000_000,\n        multicallChunk: 5,\n      },\n      {\n        gasLimitOverride: 6_250_000,\n        multicallChunk: 4,\n      }\n    )\n  }\n\n  const router = new AlphaRouter({ chainId, provider, v2SubgraphProvider, multicall2Provider, onChainQuoteProvider })\n  routers[chainId] = router\n  routersCache.set(provider, routers)\n  return router\n}\n\nasync function getQuoteResult(\n  {\n    tradeType,\n    tokenIn,\n    tokenOut,\n    amount: amountRaw,\n  }: {\n    tradeType: TradeType\n    tokenIn: { address: string; chainId: number; decimals: number; symbol?: string }\n    tokenOut: { address: string; chainId: number; decimals: number; symbol?: string }\n    amount: BigintIsh | null\n  },\n  router: AlphaRouter,\n  routerConfig: Partial<AlphaRouterConfig>\n): Promise<QuoteResult> {\n  const tokenInIsNative = Object.values(SwapRouterNativeAssets).includes(tokenIn.address as SwapRouterNativeAssets)\n  const tokenOutIsNative = Object.values(SwapRouterNativeAssets).includes(tokenOut.address as SwapRouterNativeAssets)\n  const currencyIn = tokenInIsNative\n    ? nativeOnChain(tokenIn.chainId)\n    : new Token(tokenIn.chainId, tokenIn.address, tokenIn.decimals, tokenIn.symbol)\n  const currencyOut = tokenOutIsNative\n    ? nativeOnChain(tokenOut.chainId)\n    : new Token(tokenOut.chainId, tokenOut.address, tokenOut.decimals, tokenOut.symbol)\n\n  const baseCurrency = isExactInput(tradeType) ? currencyIn : currencyOut\n  const quoteCurrency = isExactInput(tradeType) ? currencyOut : currencyIn\n  const amount = CurrencyAmount.fromRawAmount(baseCurrency, JSBI.BigInt(amountRaw ?? '1')) // a null amountRaw should initialize the route\n  const route = await router.route(amount, quoteCurrency, tradeType, /*swapConfig=*/ undefined, routerConfig)\n\n  if (!amountRaw) return { state: QuoteState.INITIALIZED }\n  if (!route) return { state: QuoteState.NOT_FOUND }\n\n  return transformSwapRouteToGetQuoteResult({ ...route, routeString: routeAmountsToString(route.route) })\n}\n\nexport async function getClientSideQuoteResult(\n  {\n    tokenInAddress,\n    tokenInChainId,\n    tokenInDecimals,\n    tokenInSymbol,\n    tokenOutAddress,\n    tokenOutChainId,\n    tokenOutDecimals,\n    tokenOutSymbol,\n    amount,\n    tradeType,\n    provider,\n  }: GetQuoteArgs,\n  routerConfig: Partial<AlphaRouterConfig>\n) {\n  if (!isAutoRouterSupportedChain(tokenInChainId)) {\n    throw new Error(`Router does not support this token's chain (chainId: ${tokenInChainId}).`)\n  }\n\n  const router = getRouter(tokenInChainId, provider)\n  return getQuoteResult(\n    {\n      tradeType,\n      tokenIn: {\n        address: tokenInAddress,\n        chainId: tokenInChainId,\n        decimals: tokenInDecimals,\n        symbol: tokenInSymbol,\n      },\n      tokenOut: {\n        address: tokenOutAddress,\n        chainId: tokenOutChainId,\n        decimals: tokenOutDecimals,\n        symbol: tokenOutSymbol,\n      },\n      amount,\n    },\n    router,\n    routerConfig\n  )\n}\n"],"names":["transformSwapRouteToGetQuoteResult","quote","quoteGasAdjusted","route","routeString","estimatedGasUsed","estimatedGasUsedQuoteToken","estimatedGasUsedUSD","gasPriceWei","methodParameters","blockNumber","trade","tradeType","inputAmount","outputAmount","routeResponse","subRoute","amount","tokenPath","protocol","Protocol","V3","pools","curRoute","i","length","nextPool","tokenIn","tokenOut","edgeAmountIn","undefined","isExactInput","quotient","toString","edgeAmountOut","push","type","chainId","decimals","address","symbol","fee","liquidity","sqrtRatioX96","tickCurrent","amountIn","amountOut","V2","pairs","reserve0","reserve1","token","currency","wrapped","state","QuoteState","SUCCESS","data","amountDecimals","toExact","quoteDecimals","quoteGasAdjustedDecimals","gasUseEstimateQuote","gasUseEstimateQuoteDecimals","gasUseEstimate","gasUseEstimateUSD","AUTO_ROUTER_SUPPORTED_CHAINS","Object","values","ChainId","filter","Number","isInteger","isAutoRouterSupportedChain","Boolean","includes","routersCache","WeakMap","getRouter","provider","routers","get","cached","v2SubgraphProvider","MAINNET","StaticV2SubgraphProvider","onChainQuoteProvider","multicall2Provider","POLYGON","POLYGON_MUMBAI","UniswapMulticallProvider","OnChainQuoteProvider","retries","minTimeout","maxTimeout","multicallChunk","gasLimitPerCall","quoteMinSuccessRate","gasLimitOverride","router","AlphaRouter","set","getQuoteResult","routerConfig","amountRaw","tokenInIsNative","SwapRouterNativeAssets","tokenOutIsNative","currencyIn","nativeOnChain","Token","currencyOut","baseCurrency","quoteCurrency","CurrencyAmount","fromRawAmount","JSBI","BigInt","INITIALIZED","NOT_FOUND","routeAmountsToString","getClientSideQuoteResult","tokenInAddress","tokenInChainId","tokenInDecimals","tokenInSymbol","tokenOutAddress","tokenOutChainId","tokenOutDecimals","tokenOutSymbol","Error"],"mappings":"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"}